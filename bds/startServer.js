const{spawn:e}=require("child_process"),{existsSync:r,readdirSync:o,writeFileSync:s}=require("fs"),{env:t,argv:i}=require("process"),n=require("path"),{getTime:c,sleep:d}=require("./time.js"),l=require("properties-parser"),a=n.join(t.appdata,"logs"),p=require("../bds-config.json"),u=n.join(`${__dirname}/../`);let g,f="",v=[];const w=e("cmd",{cwd:u});if(!r(`${u}/bedrock_server`))throw Error("bedrock_server directory does not exist, unable to start the process.");if(i.includes("-write=false"))console.log(`[${c()}] Disable write permission`);else{let e=l.createEditor(n.join(u,"bedrock_server","server.properties"));console.log(`[${c()}] Opening bedrock_server/server.properties`),e.set("content-log-file-enabled","true"),e.save(),console.log(`[${c()}] Successfully set "content-log-file-enabled" to true`),r(a)?s(n.join(__dirname,"ignore.json"),JSON.stringify(o(a))):s(n.join(__dirname,"ignore.json"),"[]")}w.stdin.setEncoding("utf-8"),w.stdout.pipe(process.stdout),w.stdout.on("data",(e=>{f+=e})),console.log(`[${c()}] Sent request to start BDS...`),w.stdin.write(".\\bedrock_server\\bedrock_server.exe\n",(function(e){e&&console.error(e)})),i.includes("-ignoreConfig")?(g=0,v=[]):(g=p["server-uptime"],v=p.serverInitialize.commands),async function(){for(const e of v)await d(50),w.stdin.write(`${e}\n`);await d(1e3*g),w.stdin.write("stop\n"),w.stdin.write("@echo off\n"),w.stdin.end()}(),w.on("close",(()=>{let e=f.split("\r\n");"Quit correctly"!==e[e.length-3]&&(console.error("Exiting process with code 1"),process.exitCode=1)}));